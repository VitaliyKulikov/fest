<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <title>Accessing Static Fields</title>
  </properties>

  <body>
    <section name="Accessing Static Fields">
      <p>
        We will use an example to better understand FEST-Reflect's 
        <a href="http://martinfowler.com/bliki/FluentInterface.html" target="_blank">fluent interface</a> for 
        static field access.
      </p>
      <p>  
        Let's assume we have a simple class <code class="code">Person</code> that defines the following field:
        <pre class="prettyprint">
<span class="kwd">class</span>&#160;<span class="typ">Person</span> {

  <span class="kwd">private static int</span> count;

}</pre>
      </p>
      <p>
        The following sections compares static field access using Java Reflection and FEST-Reflect. We are going to 
        assume the following static import:
        <pre class="prettyprint">
<span class="kwd">import static</span> org.fest.reflect.core.Reflection.staticField;</pre>
      </p>

      <subsection name="Reading the value of a static field">
        <p>
          Java Reflection:
          <pre class="prettyprint">
<span class="typ">Field</span> field = Person.<span class="kwd">class</span>.<span class="fnc">getField</span>(<span class="str">&quot;count&quot;</span>);

AccessController.<span class="fnc">doPrivileged</span>(<span class="kwd">new</span>&#160;<span class="fnc">PrivilegedAction</span>&lt;Void&gt;() {
  <span class="kwd">public</span> Void <span class="fnc">run</span>() {
    field.<span class="fnc">setAccessible</span>(<span class="kwd">true</span>);
    <span class="kwd">return null</span>;
  }
});    

<span class="kwd">int</span> count = (int) field.<span class="fnc">get</span>(<span class="kwd">null</span>);</pre>
        </p>
        <p>
          FEST-Reflect:
          <pre class="prettyprint">
<span class="kwd">int</span> count = <span class="fnc">staticField</span>(<span class="str">&quot;count&quot;</span>).<span class="fnc">ofType</span>(<span class="kwd">int</span>.<span class="kwd">class</span>)
                                .<span class="fnc">in</span>(Person.<span class="kwd">class</span>)
                                .<span class="fnc">get</span>();</pre>
        </p>
      </subsection>

      <subsection name="Setting the value of a field">
        <p>
          Java Reflection:
          <pre class="prettyprint">
<span class="typ">Field</span> field = Person.<span class="kwd">class</span>.<span class="fnc">getField</span>(<span class="str">&quot;count&quot;</span>);

AccessController.<span class="fnc">doPrivileged</span>(<span class="kwd">new</span>&#160;<span class="fnc">PrivilegedAction</span>&lt;Void&gt;() {
  <span class="kwd">public</span> Void <span class="fnc">run</span>() {
    field.<span class="fnc">setAccessible</span>(<span class="kwd">true</span>);
    <span class="kwd">return null</span>;
  }
});    

field.<span class="fnc">set</span>(<span class="kwd">null</span>, 8);</pre>
        </p>
        <p>
          FEST-Reflect:
          <pre class="prettyprint">
<span class="fnc">staticField</span>(<span class="str">&quot;count&quot;</span>).<span class="fnc">ofType</span>(<span class="kwd">int</span>.<span class="kwd">class</span>)
                    .<span class="fnc">in</span>(Person.<span class="kwd">class</span>)
                    .<span class="fnc">set</span>(8);</pre>
        </p>
      </subsection>
    </section>
  </body>
</document>

