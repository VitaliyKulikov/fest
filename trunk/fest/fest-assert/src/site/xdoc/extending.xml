<?xml version="1.0" encoding="UTF-8"?>
<document>

	<properties>
		<title>Extending</title>
	</properties>

	<body>
		<section name="Extending FEST-Assert">
		  <p>
		    FEST-Assert can be easily extended using:
		    <ul>
		      <li>Custom conditions</li>
		      <li>Custom assertion classes</li>
		    </ul>
		  </p>
		  <subsection name="Custom Conditions">
		    <p>
          Assertions classes provided by FEST-Assert can be extended by using custom conditions (instances of 
          <code class="code">org.fest.assertions.Condition</code>.) 
        </p>
        <p>  
          For example, the following condition verifies that the 
          characters in a <code class="code">String</code> are in uppercase:
        </p>
        <p>
          <pre class="prettyprint">
<span class="kwd">class</span> UpperCaseCondition <span class="kwd">extends</span> Condition&lt;String&gt; {
  <span class="kwd">public boolean</span>&#160;<span class="fnc">matches</span>(<span class="typ">String</span> value) {
    <span class="kwd">if</span>(<span class="fnc">isEmpty</span>(value)) <span class="kwd">return false</span>;
    <span class="kwd">return</span> value.<span class="fnc">equals</span>(value.<span class="fnc">toUpperCase</span>());
  }

  <span class="kwd">public static</span> UpperCaseCondition <span class="fnc">isUpperCase</span>() {
    <span class="kwd">return new</span>&#160;<span class="fnc">UpperCaseCondition</span>(<span class="str">&quot;Uppercase&quot;</span>);
  }
}</pre>
        </p>
        <p>  
          This example shows how to use such condition:
        </p>
        <p>  
          <pre class="prettyprint">
<span class="fnc">assertThat</span>(<span class="str">&quot;hello&quot;</span>).<span class="fnc">as</span>(<span class="str">&quot;Greeting&quot;</span>).<span class="fnc">satisfies</span>(<span class="fnc">isUppercase</span>());</pre>
        </p>
        <p>
          which will fail with the message 
          &quot;<code class="code">[Greeting] actual value:&lt;'hello'&gt; should satisfy condition:&lt;Uppercase&gt;</code>&quot;
		    </p>
			</subsection>
			<subsection name="Custom Assertion Classes">
			  <p>
			    FEST-Assert can also &quot;decorate&quot; user-defined assertion classes with the prefix 
			    '<code class="code">assertThat</code>,' resulting in improved readability of test code. The only condition
			    is that user-defined assertion classes must implement the marker interface
			    <code class="code">org.fest.assertions.AssertExtension</code>.
			  </p>
			  <p>
			    The following example demonstrates an assertion class that verifies the state of a <code class="code">ServerSocket</code>:
			    <pre class="prettyprint">
<span class="kwd">public class</span> ServerSocketAssertion <span class="kwd">implements</span> AssertExtension {
  <span class="kwd">private final</span>&#160;<span class="typ">ServerSocket</span> socket;

  <span class="kwd">public</span>&#160;<span class="fnc">ServerSocketAssertion</span>(<span class="typ">ServerSocket</span> socket) {
    <span class="kwd">this</span>.socket = socket;
  }

  <span class="kwd">public</span> ServerSocketAssert <span class="fnc">isConnectedTo</span>(<span class="kwd">int</span> port) {
    <span class="fnc">assertThat</span>(socket.<span class="fnc">isBound</span>()).<span class="fnc">isTrue</span>();
    <span class="fnc">assertThat</span>(socket.<span class="fnc">getLocalPort</span>()).<span class="fnc">isEqualTo</span>(port);
    <span class="fnc">assertThat</span>(socket.<span class="fnc">isClosed</span>()).<span class="fnc">isFalse</span>();
    <span class="kwd">return this</span>;
  }
}</pre>
			  </p>
        <p>
          We can decorate that assertion class with '<code class="code">assertThat</code>':
          <pre class="prettyprint">
<span class="typ">ServerSocketAssertion</span> socket = <span class="kwd">new</span>&#160;<span class="fnc">ServerSocketAssertion</span>(server.<span class="fnc">getSocket</span>());
<span class="fnc">assertThat</span>(socket).<span class="fnc">isConnectedTo</span>(2000);</pre>
    </p>
			</subsection>
		</section>
	</body>
</document>