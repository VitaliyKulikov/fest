#summary Start testing Swing GUIs.
#labels Featured

== Introduction ==

FEST (Fixtures for Easy Software Testing) is an open source project (Apache 2.0 license) which aims at making software testing easier. This guide explains how to get started with FEST's Swing module, which makes creation and maintain robust GUI functional tests easy.

== Creating your first test ==

  # Download the latest version of the Swing module from the project's [http://code.google.com/p/fest/downloads/list download page]. The filename should be similar to _fest-swing-VERSION.zip_.
  # Include the file fest-swing-VERSION.jar and its dependencies (jar/zip files, located in the 'lib' folder in the downloaded zip file) in your classpath.
  # Use the fixtures in the package `org.fest.swing.fixture`. Although you can work directly with the FEST Robot (`org.fest.swing.RobotFixture`,) it is too low-level. It is a lot easier to work with the provided fixtures.

GUI Tests that use FEST can be written with either [http://junit.org JUnit] or [http://testng.org TestNG]. The following is an example of a test that verifies that the text in the `JLabel` changes to the text in the `JTextField` when the `JButton` is clicked:

{{{
  private FrameFixture window;  

  @BeforeMethod public void setUp() {
    window = new FrameFixture(new MyFrame());
    window.show();
  }

  @AfterMethod public void tearDown() {
    window.cleanUp();
  }
  
  @Test public void shouldCopyTextInLabelWhenClickingButton() {
    window.textBox("textToCopy").enterText("Some random text");
    window.button("copyButton").click();
    window.label("copiedText").requireText("Some random text");    
  }
}}}

Some observations:
  # We use a `org.fest.swing.fixture.FrameFixture` to display the GUI to test before executing the test method. `FrameFixture`s make it easy to lookup components in the GUI under test.
  # We clean up resources after running each test method. This step is *very important* because releases the keyboard and mouse from the FEST Robot (otherwise your computer would be pretty close to unusable.)
  # FEST looks up components by name (which is the most reliable way.) We need to specify unique names for each component in our test. For example, in our GUI under test:

{{{
  // GUI under test
  JTextField textField = new JTextField();
  textField.setName("textToCopy");
  
  JButton button = new JButton("Copy");
  button.setName("copyButton");

  JLabel label = new JLabel();
  label.setName("copiedText");
}}}

If you have any questions or comments, please post them at [http://groups.google.com/group/easytesting FEST's Group] (you are always welcome to join the group.) 

== Dependencies ==
The following table shows the dependencies of the Swing module:

|| *Dependency* || *Description* || *Required By* || *Scope* ||
|| fest-swing-0.4.jar || [http://fest.googlecode.com/svn/trunk/fest/fest-swing/javadocs/index.html FEST Swing module] || _N/A_ || _N/A_ ||
|| fest-reflect-0.1-SNAPSHOT.jar || Fluent Java reflection || fest-swing || Test ||
|| fest-assert-0.2-SNAPSHOT.jar || Fluent assertions || fest-swing, fest-reflect || Compile ||
|| fest-util-0.2-SNAPSHOT.jar || Utility methods || fest-swing, fest-reflect, fest-assert || Compile ||
|| abbot-1.0.0.rc5.jar || Abbot || fest-swing || Compile ||
|| gnu-regexp-1.1.4.jar || || abbot || Compile ||
|| jdom-1.0.jar || || abbot || Compile ||
|| MRJToolketStubs-1.0.jar || || abbot || Compile ||
|| xercesImpl-2.4.0.jar || || abbot || Compile ||
|| xmlParserAPIs-2.2.1 || || abbot || Compile ||

The following table shows the dependencies of the [http://testng.org TestNG] extension for the Swing module:

|| *Dependency* || *Description* || *Required By* || *Scope* ||
|| fest-swing-testng-0.4.jar || [http://fest.googlecode.com/svn/trunk/fest/fest-swing-testng/javadocs/index.html TestNG extension for the Swing module] || _N/A_ || _N/A_ ||
|| fest-swing-0.4.jar || [http://fest.googlecode.com/svn/trunk/fest/fest-swing/javadocs/index.html FEST Swing module] || fest-swing-testng || Compile ||
|| testng-5.5-jdk15.jar || TestNG || fest-swing-testng || Compile ||
