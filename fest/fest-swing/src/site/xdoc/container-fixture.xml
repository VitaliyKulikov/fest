<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <title>Looking up Components with a ContainerFixture</title>
  </properties>

  <body>
    <section name="Using a ContainerFixture to Look Up Components">
      <p>
        The abstract class 
        <code class="code"><a href="http://fest.easytesting.org/swing/apidocs/org/fest/swing/fixture/ContainerFixture.html" target="_blank">org.fest.swing.fixture.ContainerFixture</a></code> 
        provides shortcuts to look up GUI components inside the <code class="code">Container</code> being tested. There 
        are three overloaded versions of each shortcut method, each for each 
        <a href="../component-lookup.html">component lookup type</a> (by name, type or
        <code class="code">GenericTypeMatcher</code>.)
      </p>
      <p>
        The following example uses a 
        <code class="code"><a href="http://fest.easytesting.org/swing/apidocs/org/fest/swing/fixture/FrameFixture.html" target="_blank">FrameFixture</a></code>,
        a concrete implementation of <code class="code">ContainerFixture</code>, to look up a &quot;login&quot; 
        <code class="code">JButton</code> by name, type and custom search criteria:
        <ul>
          <li>
            <p>
              by name:
              <pre class="prettyprint">
<span class="typ">JButtonFixture</span> button = frame.<span class="fnc">button</span>(<span class="str">&quot;login&quot;</span>);</pre>
            </p>
          </li>
          <li>
            <p>
              by type:            
              <pre class="prettyprint">
<span class="typ">JButtonFixture</span> button = frame.<span class="fnc">button</span>();</pre>
            </p>
          </li>
          <li>
            <p>
              custom search criteria (using a <code class="code">GenericTypeMatcher</code>):
              <pre class="prettyprint">
<span class="typ">JButtonFixture</span> button = frame.<span class="fnc">button</span>(new <span class="fnc">GenericTypeMatcher</span>&lt;JButton&gt;() {
  <span class="lit">@Override</span>&#160;<span class="kwd">protected boolean</span>&#160;<span class="fnc">isMatching</span>(<span class="typ">JButton</span> button) {
    <span class="kwd">return</span>&#160;<span class="str">&quot;Login&quot;</span>.<span class="fnc">equals</span>(button.<span class="fnc">getText</span>());
  }  
});</pre>         
            </p>
          </li>
        </ul>
      </p>
      <subsection name="Scope of component lookups">
        <p>
          By default, only components that are showing on the screen can participate in component lookups (except for
          <code class="code">JMenuItem</code>s, which are not showing until they are selected.) To change the scope
          of component lookups, simply call the method 
          '<code class="code">componentLookupScope(ComponentLookupScope)</code>' in 
          <code class="code">org.fest.swing.core.Settings</code>. For more information about component lookup scope,
          please read <code class="code">org.fest.swing.core.ComponentLookupScope</code>&#160;
          <a href="http://fest.easytesting.org/swing/apidocs/org/fest/swing/core/ComponentLookupScope.html">Javadoc documentation</a>.
        </p>
        <p>
          Example:
          <pre class="prettyprint">
<span class="com">// including showing and not-showing components in component lookups</span>&#160;          
Settings.<span class="fnc">componentLookupScope</span>(ComponentLookupScope.ALL);</pre>
        </p>
        <p>
          This setting affects component lookup by name and type <strong>only</strong>. Creators of  
          <code class="code">GenericTypeMatcher</code>s need to specify if lookup includes non-showing components or not. 
        </p>
      </subsection>
      <subsection name="Links">
        <p>
          <ul>
            <li><a href="component-lookup.html">Component lookup types</a></li>
            <li><a href="lookup-troubleshoot.html">Component lookup troubleshooting</a></li>
          </ul>
        </p>
      </subsection>
    </section>
  </body>
</document>  
