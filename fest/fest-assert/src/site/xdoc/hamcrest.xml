<?xml version="1.0" encoding="UTF-8"?>
<document>

	<properties>
		<title>Comparing to Hamcrest</title>
	</properties>

	<body>
		<section name="What about Hamcrest?">
      <p>
  		  <a href="http://code.google.com/p/hamcrest/" target="_blank">Hamcrest</a> is a powerful library for writing 
  		  custom matchers. Although FEST-Assert and Hamcrest have similar goals, FEST-Assert takes a different approach. 
  		  Here is an example using Hamcrest (borrowed from Martin Gilday's example posted at the 
		    <a href="http://testng.org" target="_blank">TestNG</a> mailing list):
		    <pre class="prettyprint">
<span class="kwd">import static</span> org.hamcrest.MatcherAssert.assertThat;
<span class="kwd">import static</span> org.hamcrest.Matchers.containsString;
<span class="kwd">import static</span> org.hamcrest.Matchers.equalTo;
<span class="kwd">import static</span> org.testng.Assert.assertTrue;
 
<span class="kwd">import</span> org.testng.annotations.Test;
 
<span class="kwd">public class</span> SomeTest {
 
  <span class="lit">@Test</span>&#160;<span class="kwd">public void</span>&#160;<span class="fnc">withHamcrest</span>() {
    <span class="fnc">assertTrue</span>(<span class="kwd">true</span>);
    <span class="kwd">int</span> result = 2 + 3;
    <span class="fnc">assertThat</span>(<span class="str">&quot;calculation&quot;</span>, 5, <span class="fnc">equalTo</span>(result));
    <span class="fnc">assertThat</span>(<span class="str">&quot;Hello World&quot;</span>, <span class="fnc">containsString</span>(<span class="str">&quot;World&quot;</span>));
  }
}</pre>
		  </p>
		  <p>
		    This is the same example, using FEST's assertions:
		  </p>
		  <p>
		    <pre class="prettyprint">
<span class="kwd">import static</span> org.fest.assertions.Assertions.assertThat;
 
<span class="kwd">import</span> org.testng.annotations.Test;
 
<span class="kwd">public class</span> SomeTest {
 
  <span class="lit">@Test</span>&#160;<span class="kwd">public void</span>&#160;testApp() {
    <span class="fnc">assertThat</span>(<span class="kwd">true</span>).<span class="fnc">isTrue</span>();
    <span class="kwd">int</span> result = 2 + 3;
    <span class="fnc">assertThat</span>(result).<span class="fnc">as</span>(<span class="str">&quot;calculation&quot;</span>).<span class="fnc">isEqualTo</span>(5);
    <span class="fnc">assertThat</span>(<span class="str">&quot;Hello World&quot;</span>).<span class="fnc">contains</span>(<span class="str">&quot;World&quot;</span>);
  }
}</pre>
		  </p>
      <p>
        We like FEST-Assert's approach because:
        <ol>
          <li>
            Only one static import is needed (<code class="code">org.fest.assertions.Assertions.assertThat</code>)
          </li>
          <li>
            Allows us to use our IDE's &quot;auto-complete&quot; feature: we only type &quot;.&quot; and we get the 
            possible assertion methods for the value passed to &quot;<code class="code">assertThat</code>&quot;
          </li>
          <li>
            We can chain related assertion methods:
            <pre class="prettyprint">
<span class="fnc">assertThat</span>(yoda).<span class="fnc">isInstanceOf</span>(Jedi.<span class="kwd">class</span>)
                .<span class="fnc">isEqualTo</span>(foundJedi)
                .<span class="fnc">isNotEqualTo</span>(possibleSith);</pre>
          </li>
        </ol>
      </p>
      <p>
        Which one to use? Hamcrest or FEST-Assert? It is up to you...it depends on the needs of your project and your coding style!
      </p>
		</section>
	</body>
</document>